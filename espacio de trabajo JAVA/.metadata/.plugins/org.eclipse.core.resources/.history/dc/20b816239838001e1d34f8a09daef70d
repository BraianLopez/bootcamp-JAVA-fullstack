package com.codingdojo.lenguajes.models;

import java.util.Date;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;

@Entity
@Table(name="Lenguajes")
public class Lenguajes {
	 @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private Long id;
	    
	 	@Size(min = 2, message="El nombre debe tener por lo menos 2 caracteres")
	    @Size( max = 20, message="El nombre debe tener hasta 20 caracteres")
	    private String name;
	    
	    @NotBlank(message = "Por favor agrega una descripcion")
		@Size(min = 5, message="Minimo 5 caracteres")
		@Column(columnDefinition = "TEXT")
	    private String description;
	    
	    @Size(min = 3, max = 40)
	    private String language;
	    
	    @Min(100)
	    private Integer numberOfPages;
	    
	    @Column(updatable=false)//ESTO NO PERMITIRA QUE EL CAMPO createdAt SEA MODIFICADO DESPUES DE SU CREACION
	    @DateTimeFormat(pattern="yyyy-MM-dd")
	    private Date createdAt;
	    @DateTimeFormat(pattern="yyyy-MM-dd")
	    private Date updatedAt;
	    

		@PrePersist
	    protected void onCreate(){			 //ASIGNA EL ESPACIO DE TIEMPO EXACTO  
	        this.createdAt = new Date();	 //EN EL QUE SE CREA UN LIBRO
	    }
	    @PreUpdate
	    protected void onUpdate(){			//ASIGNA EL ESPACIO DE TIEMPO EXACTO
	        this.updatedAt = new Date();	//EN EL QUE SE ACTUALIZA UN LIBRO
	    }
}
